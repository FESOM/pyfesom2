name: pyfesom2 extended test

# Controls when the action will run. Triggers the workflow on push or pull request.

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      # - master
      - new_workflow
  pull_request:
    branches:
      # - master
      - new_workflow

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: setup-env-${{matrix.os}}-python-${{matrix.python-version}}
    runs-on: ${{ matrix.os }} #, macos-latest, windows-latest]
    strategy:
      #max-parallel: 1
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.9"]
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v3
      with:
        path: new_workflow


    - name: Checkout pyfesom2 
      uses: actions/checkout@v3
      with:
        repository: FESOM/pyfesom2
        path: pyfesom2
        fetch-depth: 0

    - name: install conda environment
      uses: mamba-org/provision-with-micromamba@main #/v12
      with:
        environment-file: new_workflow/ci/requirements-py37.yml
        environment-name: pyfesom2
        cache-env: true
        cache-env-key: "${{runner.os}}-${{runner.arch}}-py${{env.PYTHON_VERSION}}-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"

    # - name: Checkout git commit log 
    #   working-directory: pyfesom2
    #   run: |
    #         git checkout suvi_test_branch_workflow
    #         git log
    - name: Checkout xarray version
      run: |
        python -c "import xarray; print('xarray version:', xarray.__version__)"
        python -c "import netCDF4; print('netcdf4 (py,c) versions:', netCDF4.__version__, netCDF4._netCDF4.__netcdf4libversion__)"
    - name: Install pyfesom2
      working-directory: pyfesom2
      run: |
            python -m pip install -e .
    - name: Test pyfesom2 import
      working-directory: pyfesom2
      run: |
            python -c "import pyfesom2"
    - name: Test pyfesom2
      working-directory: pyfesom2
      run: |
            pytest

# jobs:
#   basic_tests:
#     name: Ex1 (${{ matrix.python-version }}, ${{ matrix.os }})
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: ["ubuntu-latest", "macos-latest", "windows-latest"]
#         python-version: ["3.8", "3.9"]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: conda-incubator/setup-miniconda@v2
#         with:
#           auto-update-conda: true
#           activate-environment: pyfesom2
#           environment-file: ci/requirements-py37.yml
#           python-version: ${{ matrix.python-version }}
#           channels: conda-forge
#           auto-activate-base: false
#           show-channel-urls: true
#           use-only-tar-bz2: true
#           allow-softlinks: true
#       - name: Install
#         shell: bash -l {0}
#         run: pip install -e .
#       - name: Test
#         shell: bash -l {0}
#         run: pytest

